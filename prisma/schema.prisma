// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model Employee {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String   @unique
  role      Role     @default(ENGINEER)
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Song {
  id          Int       @id @default(autoincrement())
  title       String    @unique
  artists     String[]
  releaseDate DateTime
  duration    Int
  createdAt   DateTime  @default(now())
  updateAt    DateTime  @updatedAt
  Playlist    Playlist? @relation(fields: [playlistId], references: [id])
  playlistId  Int?
  Artist      Artist?   @relation(fields: [artistId], references: [id])
  artistId    Int?
}

model Playlist {
  id       Int     @id @default(autoincrement())
  title    String  @unique
  songs    Song[]
  Artist   Artist? @relation(fields: [artistId], references: [id])
  artistId Int?
}

model Artist {
  id        Int        @id @default(autoincrement())
  name      String
  playlists Playlist[]
  songs     Song[]
}

model User {
  id      Int      @id @default(autoincrement())
  name    String
  Profile Profile?
}

model Profile {
  id     Int    @id @default(autoincrement())
  photo  String
  phone  String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

enum Role {
  INTERN
  ADMIN
  ENGINEER
}
